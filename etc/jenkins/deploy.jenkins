pipeline {
  agent any

  environment {
    WORKSPACE_DIR = 'WingWords'
    NVM_DIR = "${WORKSPACE}/.nvm"
  }

  stages {
    stage('Install Node') {
      steps {
        dir(WORKSPACE_DIR) {
          sh '''
            mkdir -p "$NVM_DIR"
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install 18

            # Crear wrapper para ejecutar npm con Node 18
            echo '#!/bin/bash' > with-node.sh
            echo 'export NVM_DIR="$NVM_DIR"' >> with-node.sh
            echo '[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"' >> with-node.sh
            echo 'nvm use 18 > /dev/null' >> with-node.sh
            echo 'exec "$@"' >> with-node.sh
            chmod +x with-node.sh

            echo ">>> Node y npm instalados:"
            ./with-node.sh node -v
            ./with-node.sh npm -v
          '''
        }
      }
    }

    stage('Prepare Workspace') {
      steps {
        script {
          if (fileExists(WORKSPACE_DIR)) {
            echo "WingWords directory already exists, cleaning..."
            dir(WORKSPACE_DIR) {
              sh '''
                rm -rf .nvm with-node.sh
              '''
            }
          } else {
            echo "Creating WingWords directory..."
            sh "mkdir -p $WORKSPACE_DIR"
          }
        }
      }
    }

    stage('Install Dependencies') {
      steps {
        dir(WORKSPACE_DIR) {
          sh './with-node.sh npm install'
        }
      }
    }

    stage('Run Tests') {
      steps {
        dir(WORKSPACE_DIR) {
          sh './with-node.sh npm run test'
        }
      }
    }

    stage('Deploy to Vercel') {
      environment {
        VERCEL_DEPLOYMENT_TOKEN = credentials('VERCEL_DEPLOYMENT_TOKEN')
      }
      steps {
        dir(WORKSPACE_DIR) {
          sh '''
            echo "Instalando vercel-cli..."
            ./with-node.sh npm install -g vercel

            echo "Ejecutando despliegue en Vercel..."
            ./with-node.sh vercel --prod --name=gy-books --token=$VERCEL_DEPLOYMENT_TOKEN --yes
          '''
        }
      }
    }

    stage('Create Release') {
      steps {
        echo 'Creando release...'
        // aquí puedes añadir tu lógica de release (GitHub release, etc.)
      }
    }
  }
}
